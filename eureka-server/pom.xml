<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.github.rebue.scx</groupId>
		<artifactId>scx</artifactId>
		<version>1.1.0</version>
	</parent>

	<artifactId>eureka-server</artifactId>

	<properties>
		<docker.image.prefix>rebue</docker.image.prefix>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>

		<!-- 引入log4j2依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<!-- 用slf4j实现jcl -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- 制作docker镜像的插件 -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>default</id>
						<!-- 绑定到deploy阶段执行 -->
						<!-- <phase>deploy</phase> -->
						<phase></phase>
						<goals>
							<goal>build</goal>
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- 部署到私服，${my-docker.host}在settins.xml中统一配置 -->
					<!-- <repository>${my-docker.host}/${docker.image.prefix}/${project.artifactId}</repository> -->
					<!-- 部署到hub.docker.com -->
					<repository>nnzbz/eureka-server</repository>
					<tag>${project.version}</tag>
					<!-- 此选项指定在settings.xml文件中设置的server -->
					<!-- <servers> -->
					<!-- <server> -->
					<!-- <id>docker.io</id> -->
					<!-- <username>username</username> -->
					<!-- <password>password</password> -->
					<!-- </server> -->
					<!-- </servers> -->
					<useMavenSettingsForAuth>true</useMavenSettingsForAuth>
					<buildArgs>
						<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
					<verbose>true</verbose>
					<googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>